<style>
    #shopify-section-{{ section.id }} {
      position: {% unless section.settings.sticky_header_type == 'none' %}sticky{% else %}relative{% endunless %};
    top: 0;
    background: #fff;
    width: 100%;
    {% if section.settings.show_line_separator %}
      border-bottom: 1px solid rgb(var(--color-foreground), 0.2);
    {% endif %}
    z-index: 9;
    transition: top 150ms ease-out;
    margin-bottom: {{ section.settings.margin_bottom }}px;
  }

  {% if section.settings.sticky_header_type == 'on-scroll-up' %}
    #shopify-section-{{ section.id }}
    .header-sticky {
      top: calc(-1 * var(--header-height));
    }
  {% endif %}

  #main-header {
    display: grid;
    grid-template-columns: {% if section.settings.logo_position == 'middle-center' or section.settings.logo_position == 'top-center' %}
      1fr auto 1fr
    {% else %}
    auto 1fr auto
  {% endif %};
    align-items: center;
    gap: 0 1.5rem;
    margin-inline: auto;
    padding: {{ section.settings.padding_top }}px 20px {{ section.settings.padding_bottom }}px;
  }
  #main-header .header-shop_name {
    font-size: 24px;
    font-weight: normal;
    margin: 0;
    line-height: 1;
  }
  {% if section.settings.logo_position == 'middle-center' %}
    #main-header nav {
      grid-area: 1 / 1;
    }
  {% elsif section.settings.logo_position == 'top-left' or section.settings.logo_position == 'top-center' %}
  #main-header nav {
    grid-area: 2 / span 3;
    padding-block: {{ section.settings.padding_bottom }}px;
  }
  {% endif %}
  #main-header nav ul {
    list-style: none;
    margin: 0;
    padding: 0;
    display: flex;
    flex-wrap: wrap;
    align-items: center;
    {% if section.settings.logo_position == 'top-center' %}
      justify-content: center;
    {% endif %}
    gap: 1rem;
  }
  #main-header .header-drawer_icons,
  #main-header .menu-toggle {
    display: flex;
    align-items: center;
    justify-content: space-between;
    gap: 8px;
    cursor: pointer;
    border: 0;
    background: transparent;
    color: inherit;
    font-size: inherit;
  }
  #main-header .menu-toggle svg {
    width: 12px;
    height: auto;
    transition: 300ms ease;
  }
  #main-header .menu-toggle.menu-open svg {
    transform: scaleY(-1);
  }
  .header-logo {
    width: auto;
    height: {{ settings.logo_height | append: 'px' }};
    transition: height 300ms ease;
  }
  {% if section.settings.sticky_header_type == 'reduce-logo-size' %}
    #shopify-section-{{ section.id }}
    .scrolled-header .header-logo {
      height: {{ settings.logo_height | minus: 10 | append: 'px' }};
    }
  {% endif %}
  #main-header nav a {
    text-decoration: none;
    color: inherit;
  }
  #header-cart-bubble {
      position: relative;
      margin-right: 6px;
      border: 0;
      background: transparent;
      padding: 0;
      cursor: pointer;
  }
  [data-cart-count] {
    position: absolute;
    display: grid;
    place-items: center;
    top: -2px;
    right: -6px;
    width: 16px;
    height: 16px;
    color: rgb(var(--color-background));
    background: rgb(var(--color-foreground));
    font-size: 10px;
    border-radius: 10rem;
  }
  .header-actions,
  .header-actions > * {
    display: flex;
    justify-content: flex-end;
    gap: 1rem;
    color: inherit;
    {% if section.settings.logo_position == 'top-left' or section.settings.logo_position == 'top-center' %}
      grid-area: 1 / 3;
    {% endif %}
  }

  #header-actions_search {
    cursor: pointer;
  }
  #header-search {
    position: absolute;
    inset: 0;
    color: rgb(var(--color-foreground));
    background: rgb(var(--color-background));
    display: none;
    justify-content: center;
    align-items: center;
    gap: 1rem;
  }
  #header-search.active {
    display: flex;
  }


  #header-search form {
    position: relative;
    border: 1px solid rgb(var(--color-foreground), 0.2);
    width: min(750px, 100%);
    height: 40px;
    display: flex;
    justify-content: space-between;
    gap: 10px;
    padding-inline: 10px;
  }
  #header-search form input {
    width: 100%;
    border: 0;
    font-size: 15px;
    color: inherit;
    background: transparent;
    outline: none;
  }
  /* clears the 'X' from Internet Explorer */
  #header-search form input[type='search']::-ms-clear,
  #header-search form input[type='search']::-ms-reveal {
      display: none;
      width: 0;
      height: 0;
  }
  #header-search .reset__button {
    position: relative;
    border: 1px solid rgba(var(--color-foreground),.2) !important;
    border-radius: 10rem;
    min-width: 16px;
    height: 16px;
    display: grid;
    place-items: center;
    align-self: center;
    margin: 0;
    margin-right: 15px;
  }

  #header-search .reset__button svg.icon-close {
    width: 10px !important;
    height: auto;
  }

  /* clears the 'X' from Chrome */
  #header-search form input[type='search']::-webkit-search-decoration,
  #header-search form input[type='search']::-webkit-search-cancel-button,
  #header-search form input[type='search']::-webkit-search-results-button,
  #header-search form input[type='search']::-webkit-search-results-decoration {
      display: none;
  }
  #header-search button {
    background: transparent;
    border: 0;
    cursor: pointer;
    padding: 0;
  }
  #header-search svg {
    width: 20px;
    color: black;
  }

  #header-search button.white svg {
    color: white !important;
  }

  #header-search button.black svg {
    color: black !important;
  }
  @media (min-width: 768px) {
    {% unless section.settings.menu_type_desktop == 'drawer' %}
      #header-drawer {
        display: none;
      }
    {% endunless %}
  }
  @media (max-width: 768px) {
    #main-header > nav,
    .header-actions_account,
    .header-actions_localization {
      display: none;
    }
    #main-header {
      grid-template-columns:
      {% if section.settings.mobile_logo_position == 'center' %}
        1fr auto 1fr
      {% else %}
        auto 1fr auto
      {% endif %};
      padding: {{ section.settings.padding_top | divided_by: 1.5 }}px 20px {{ section.settings.padding_bottom | divided_by: 1.5 }}px;
    }
    #header-search {
      gap: .7rem;
    }
    #header-search predictive-search {
      position: static;
    }
    #predictive-search-wrapper {
        border-top: 1px solid rgba(var(--color-foreground),var(--popup-border-opacity));
    }
  }
</style>

<div class="color-{{ section.settings.color_scheme }} gradient">
  <div class="hidden max-w-[90%] mx-auto my-0 md:!flex justify-end gap-4 text-white px-2 py-1 text-[13px] items-center">
    <a href="{{routes.order_tracking_url}}" class="cursor-pointer hover:underline">Order Tracking</a>
    <a href="{{ routes.contact_url }}" class="cursor-pointer hover:underline">Contact Us</a>
    <div class="text-white text-[13px]">
      <a href="#" class="cursor-pointer hover:underline {%  if shop.locale == 'en' %} font-bold {% else %} font-normal {% endif %}">EN</a> /
      <a href="#" class="cursor-pointer hover:underline {%  if shop.locale == 'fn' %} font-bold {% else %} font-normal {% endif %}">FN</a>
    </div>
  </div>
  <header
    id="main-header"
    x-data="{ searchOpen: false, searchTerm: '', searchOpenDesktop: false }"
    @click.outside="searchOpen = false;"
    @input="searchTerm = $event.target.value"
    class="!px-0 !py-1 !max-w-[90%] !min-h-[50px] !flex justify-between items-center"
  >
    <div class="flex gap-3 md:!hidden">
      {% render 'component-nav-drawer' %}
      <div
        class="md:hidden"
        id="header-actions_search"
        @click="searchOpen = !searchOpen; $nextTick(() => { if (searchOpen) $refs.searchInput.focus() })"
      >
        {{ 'icon-search.svg' | inline_asset_content }}
      </div>
    </div>

    <div>
      {% if request.page_type == 'index' %}<h1 style="margin: 0">{% endif %}
      <a href="{{ routes.root_url }}" class="hidden md:!flex text-white">
        {% render 'jd-logo' %}
      </a>
      <a href="{{ routes.root_url }}" class="flex md:hidden text-white">
        {% render 'jd-logo-sm' %}
      </a>
      {% if request.page_type == 'index' %}</h1>{% endif %}
    </div>

    <div class="header-actions items-center !gap-2">
      {% if section.settings.enable_country_selector or section.settings.enable_language_selector %}
        <div class="header-actions_localization">
          {%- render 'component-localization-form',
            enable_country_selector: section.settings.enable_country_selector,
            enable_language_selector: section.settings.enable_language_selector
          -%}
        </div>
      {% endif %}

      <div @click.outside="searchOpenDesktop = false;">
        <div class="hidden md:!block relative">
          {%- render 'component-predictive-search', context: 'header' -%}
        </div>
        <a
          class="header-actions_account hidden md:!block"
          href="{% if customer %}{{ routes.account_url }}{% else %}{{ routes.account_login_url }}{% endif %}"
          rel="nofollow"
        >
          <div class="flex gap-2 items-center justify-center bg-white text-black p-3 font-bold text-[13px]">
            {% render 'user-icon' %}
            My Account
          </div>
        </a>
        <a
          class="block md:!hidden"
          href="{% if customer %}{{ routes.account_url }}{% else %}{{ routes.account_login_url }}{% endif %}"
          rel="nofollow"
        >
          {{ 'icon-account.svg' | inline_asset_content }}
        </a>
      </div>
      <a
        class="hidden md:!block"
        href="{{ routes.page_favorite_url }}"
        rel="nofollow"
      >
        <div class="hidden md:!flex gap-2 items-center justify-center bg-white text-black p-3 font-bold text-[13px]">
          {% render 'heart-icon' %}
          Favorites
        </div>
        <div class="md:hidden">
          {% render 'heart-icon' %}
        </div>
      </a>

      {%- for block in section.blocks -%}
        {%- case block.type -%}
          {%- when '@app' -%}
            {% render block %}
        {%- endcase -%}
      {%- endfor -%}

      <a
        id="header-cart-bubble"
        {%- if settings.cart_type == 'drawer' -%}
          @click.prevent="toggleCartDrawer"
        {%- else -%}
          href="{{ routes.cart_url }}"
        {%- endif -%}
      >
        <div class="hidden md:!flex text-black bg-white p-3 items-center font-bold text-[13px] gap-2">
          {% render 'basket-icon' %}
          Basket
        </div>
        <div class="md:hidden">
          {% render 'basket-icon' %}
          <div data-cart-count data-ajax-cart-bind="item_count">{{ cart.item_count }}</div>
        </div>
      </a>

      <div id="header-search" :class="{ 'active': searchOpen }" class="z-99">
        {%- render 'component-predictive-search', context: 'header' -%}

        <button id="close-header-search" @click="searchOpen = !searchOpen" class="white">
          {{- 'icon-close.svg' | inline_asset_content -}}
        </button>
      </div>
    </div>
  </header>

  {%- if settings.cart_type == 'notification' -%}
    {%- render 'component-cart-notification',
      color_scheme: section.settings.color_scheme,
      desktop_menu_type: section.settings.menu_type_desktop
    -%}
  {%- endif -%}

  {%- if settings.cart_type == 'drawer' -%}
    {%- render 'component-cart-drawer' -%}
  {%- endif -%}

  {% if section.settings.menu != blank and section.settings.menu_type_desktop != 'drawer' %}
    <nav>
      {% if section.settings.menu_type_desktop == 'dropdown' %}
        {% render 'component-nav-dropdown', nav_style: 'dropdown' %}
      {% elsif section.settings.menu_type_desktop != 'drawer' %}
        {% render 'component-nav-megamenu' %}
      {% endif %}
    </nav>
  {% endif %}
</div>

<script>
  const header = document.getElementById('shopify-section-{{ section.id }}');
  let lastScrollTop = 0;

  function updateHeaderHeight() {
    const headerHeight = header.offsetHeight;
    document.documentElement.style.setProperty('--header-height', `${headerHeight}px`);
  }

  window.addEventListener('resize', updateHeaderHeight);
  window.addEventListener('load', updateHeaderHeight);

  window.addEventListener('scroll', () => {
    const currentScroll = window.pageYOffset || document.documentElement.scrollTop;

    if (currentScroll > 0) {
      header.classList.add('scrolled-header');
    } else {
      header.classList.remove('scrolled-header');
    }

    if (currentScroll > lastScrollTop) {
      header.classList.add('header-sticky');
    } else if (currentScroll < lastScrollTop) {
      header.classList.remove('header-sticky');
    }

    if (currentScroll === 0) {
      header.classList.remove('header-sticky');
    }

    lastScrollTop = currentScroll <= 0 ? 0 : currentScroll;
  });
</script>
<script src="{{ 'component-localization-form.js' | asset_url }}" defer="defer"></script>

{% schema %}
{
  "name": "t:sections.header.name",
  "class": "section-header",
  "max_blocks": 3,
  "settings": [
    {
      "type": "select",
      "id": "logo_position",
      "options": [
        {
          "value": "top-left",
          "label": "t:sections.header.settings.logo_position.options__2.label"
        },
        {
          "value": "top-center",
          "label": "t:sections.header.settings.logo_position.options__3.label"
        },
        {
          "value": "middle-left",
          "label": "t:sections.header.settings.logo_position.options__1.label"
        },
        {
          "value": "middle-center",
          "label": "t:sections.header.settings.logo_position.options__4.label"
        }
      ],
      "default": "middle-left",
      "label": "t:sections.header.settings.logo_position.label",
      "info": "t:sections.header.settings.logo_help.content"
    },
    {
      "type": "link_list",
      "id": "menu",
      "default": "main-menu",
      "label": "t:sections.header.settings.menu.label"
    },
    {
      "type": "select",
      "id": "menu_type_desktop",
      "options": [
        {
          "value": "dropdown",
          "label": "t:sections.header.settings.menu_type_desktop.options__1.label"
        },
        {
          "value": "mega",
          "label": "t:sections.header.settings.menu_type_desktop.options__2.label"
        },
        {
          "value": "drawer",
          "label": "t:sections.header.settings.menu_type_desktop.options__3.label"
        }
      ],
      "default": "dropdown",
      "label": "t:sections.header.settings.menu_type_desktop.label",
      "info": "t:sections.header.settings.menu_type_desktop.info"
    },
    {
      "type": "select",
      "id": "sticky_header_type",
      "options": [
        {
          "value": "none",
          "label": "t:sections.header.settings.sticky_header_type.options__1.label"
        },
        {
          "value": "on-scroll-up",
          "label": "t:sections.header.settings.sticky_header_type.options__2.label"
        },
        {
          "value": "always",
          "label": "t:sections.header.settings.sticky_header_type.options__3.label"
        },
        {
          "value": "reduce-logo-size",
          "label": "t:sections.header.settings.sticky_header_type.options__4.label"
        }
      ],
      "default": "on-scroll-up",
      "label": "t:sections.header.settings.sticky_header_type.label"
    },
    {
      "type": "checkbox",
      "id": "show_line_separator",
      "default": true,
      "label": "t:sections.header.settings.show_line_separator.label"
    },
    {
      "type": "header",
      "content": "t:sections.header.settings.header__1.content"
    },
    {
      "type": "color_scheme",
      "id": "color_scheme",
      "label": "t:sections.all.colors.label",
      "default": "scheme-1"
    },
    {
      "type": "color_scheme",
      "id": "menu_color_scheme",
      "label": "t:sections.header.settings.menu_color_scheme.label",
      "default": "scheme-1"
    },
    {
      "type": "header",
      "content": "t:sections.header.settings.header__3.content",
      "info": "t:sections.header.settings.header__4.info"
    },
    {
      "type": "checkbox",
      "id": "enable_country_selector",
      "default": false,
      "label": "t:sections.header.settings.enable_country_selector.label"
    },
    {
      "type": "header",
      "content": "t:sections.header.settings.header__5.content",
      "info": "t:sections.header.settings.header__6.info"
    },
    {
      "type": "checkbox",
      "id": "enable_language_selector",
      "default": false,
      "label": "t:sections.header.settings.enable_language_selector.label"
    },
    {
      "type": "header",
      "content": "t:sections.header.settings.header__7.content",
      "info": "t:sections.header.settings.header__7.info"
    },
    {
      "type": "checkbox",
      "id": "enable_customer_avatar",
      "default": true,
      "label": "t:sections.header.settings.enable_customer_avatar.label",
      "info": "t:sections.header.settings.enable_customer_avatar.info"
    },
    {
      "type": "header",
      "content": "t:sections.header.settings.mobile_layout.content"
    },
    {
      "type": "select",
      "id": "mobile_logo_position",
      "options": [
        {
          "value": "center",
          "label": "t:sections.header.settings.mobile_logo_position.options__1.label"
        },
        {
          "value": "left",
          "label": "t:sections.header.settings.mobile_logo_position.options__2.label"
        }
      ],
      "default": "center",
      "label": "t:sections.header.settings.mobile_logo_position.label"
    },
    {
      "type": "header",
      "content": "t:sections.all.spacing"
    },
    {
      "type": "range",
      "id": "margin_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.header.settings.margin_bottom.label",
      "default": 0
    },
    {
      "type": "header",
      "content": "t:sections.all.padding.section_padding_heading"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 36,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_top",
      "default": 20
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 36,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_bottom",
      "default": 20
    }
  ],
  "blocks": [
    {
      "type": "@app"
    }
  ]
}
{% endschema %}
